@using Wings.Saas.Shared.Areas.Worker.Dtos
@using  Wings.Saas.Shared.Areas.Worker.Services
@inject MessageService _message
@inject KeySecretService _KeySecretService


@if (Active)
{
    <Modal Title="@(Id==null?"添加秘钥":"修改秘钥")"
           Visible="@Active"
           OnOk="@Submit"
           OnCancel="@Close">
        <Form Model="@KeySecret" @ref="submitForm"
              LabelCol="new ColLayoutParam { Span = 8 }"
              WrapperCol="new ColLayoutParam { Span = 16 }">
            <FormItem Label="账号名 ">
                <Input @bind-Value="@context.AccountName" />
            </FormItem>
            <FormItem Label="密码">
                <Input @bind-Value="@context.AccountPassword" />
            </FormItem>
            <FormItem Label="Key">
                <Input @bind-Value="@context.Key" />
            </FormItem>
            <FormItem Label="Secret">
                <Input @bind-Value="@context.Secret" />
            </FormItem>

            @*<FormItem WrapperCol="new ColLayoutParam{ Offset = 8, Span = 16 }">
            <Button Type="@ButtonType.Primary" HtmlType="submit">
                Submit
            </Button>
        </FormItem>*@


        </Form>
    </Modal>
} 
@code{
    public KeySecretOutput KeySecret { get; set; }

    public int? Id { get; set; }
    public bool Active { get; set; } = false;
    string title = "创建";
    bool _visible = false;
    public Form<KeySecretOutput> submitForm { get; set; }
    [Parameter]
    public EventCallback<bool> OnSave { get; set; }

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }


    public void Show(KeySecretOutput keySecret = null)
    {
        // create
        if (keySecret == null)
        {

            KeySecret = new KeySecretOutput();

            Active = true;
        }

        else
        {
            Id = keySecret.Id;
            KeySecret = keySecret;
            Active = true;

        }
        StateHasChanged();
    }

    public void Close()
    {
        Active = false;
        StateHasChanged();
    }

    public async Task Submit()
    {
        if (submitForm.Validate())
        {
            if (Id == null)
            {


                var rtn = await _KeySecretService.Add(KeySecret);
                if (rtn.IsSuccess)
                {
                    _message.Success("添加成功");
                    await OnSave.InvokeAsync(true);
                    Active = false;

                }
            }
            else
            {
                await _KeySecretService.Update(KeySecret);
                await OnSave.InvokeAsync(true);
                Active = false;
            }

        }
        else
        {

        }

    }
}




