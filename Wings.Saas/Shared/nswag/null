{
  "openapi": "3.0.1",
  "info": {
    "title": "eShopLinker API",
    "version": "v1"
  },
  "paths": {
    "/api/services/app/Account/IsTenantAvailable": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountIstenantavailablePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/ResolveTenantId": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountResolvetenantidPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountRegisterPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SendPasswordResetCode": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSendpasswordresetcodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountResetpasswordPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SendEmailActivationLink": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSendemailactivationlinkPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/ActivateEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountActivateemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/Impersonate": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountImpersonatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/BackToImpersonator": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountBacktoimpersonatorPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SwitchToLinkedAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSwitchtolinkedaccountPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetAuditLogs": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetauditlogsGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ServiceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrowserInfo",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasException",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetAuditLogsToExcel": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetauditlogstoexcelGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ServiceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrowserInfo",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasException",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityHistoryObjectTypes": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentityhistoryobjecttypesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitychangesGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityTypeChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitytypechangesGet",
        "parameters": [
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityChangesToExcel": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitychangestoexcelGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityPropertyChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitypropertychangesGet",
        "parameters": [
          {
            "name": "entityChangeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/BrandCategories/GetAll": {
      "get": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrandNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CategoryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/BrandCategories/GetBrandCategoryForEdit": {
      "get": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesGetbrandcategoryforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/BrandCategories/Create": {
      "post": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/BrandCategories/Update": {
      "put": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/BrandCategories/Delete": {
      "delete": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/BrandCategories/GetBrandCategoryForView": {
      "get": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesGetbrandcategoryforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandCategoryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/BrandCategories/GetBrandCategoriesToExcel": {
      "get": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesGetbrandcategoriestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrandNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CategoryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/BrandCategories/GetAllForLookup": {
      "get": {
        "tags": [
          "BrandCategories"
        ],
        "operationId": "ApiServicesAppBrandcategoriesGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrandNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CategoryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandCategoryForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Brands/GetAll": {
      "get": {
        "tags": [
          "Brands"
        ],
        "summary": "获取所有厂家、品牌列表",
        "operationId": "ApiServicesAppBrandsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Brands/GetBrandForEdit": {
      "get": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsGetbrandforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Brands/Create": {
      "post": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Brands/Update": {
      "put": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Brands/Delete": {
      "delete": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Brands/GetBrandForView": {
      "get": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsGetbrandforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Brands/GetBrandsToExcel": {
      "get": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsGetbrandstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Brands/GetAllForLookup": {
      "get": {
        "tags": [
          "Brands"
        ],
        "operationId": "ApiServicesAppBrandsGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetBrandForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Caching/GetAllCaches": {
      "get": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingGetallcachesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Caching/ClearCache": {
      "post": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingClearcachePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Caching/ClearAllCaches": {
      "post": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingClearallcachesPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Categories/GetAll": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "产品分类列表",
        "operationId": "ApiServicesAppCategoriesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Categories/GetCategoryForEdit": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesGetcategoryforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Categories/Create": {
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Categories/Update": {
      "put": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Categories/Delete": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Categories/GetCategoryForView": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesGetcategoryforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Categories/GetAllForLookup": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "ApiServicesAppCategoriesGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCategoryForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/GetUserChatFriendsWithSettings": {
      "get": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatGetuserchatfriendswithsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/GetUserChatMessages": {
      "get": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatGetuserchatmessagesGet",
        "parameters": [
          {
            "name": "TenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          },
          {
            "name": "MinMessageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/MarkAllUnreadMessagesOfUserAsRead": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatMarkallunreadmessagesofuserasreadPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/CommonLookup/GetEditionsForCombobox": {
      "get": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupGeteditionsforcomboboxGet",
        "parameters": [
          {
            "name": "onlyFreeItems",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CommonLookup/FindUsers": {
      "post": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CommonLookup/GetDefaultEditionName": {
      "get": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupGetdefaulteditionnameGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetUserDashboard": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetuserdashboardGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/SavePage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationSavepagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/RenamePage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationRenamepagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/AddNewPage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationAddnewpagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/DeletePage": {
      "delete": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationDeletepageDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/AddWidget": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationAddwidgetPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetDashboardDefinition": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetdashboarddefinitionGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetAllWidgetDefinitions": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetallwidgetdefinitionsGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetSettingName": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetsettingnameGet",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Deliveries/GetDeliveryForEdit": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesGetdeliveryforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Deliveries/Create": {
      "post": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Deliveries/Update": {
      "put": {
        "tags": [
          "Deliveries"
        ],
        "summary": "修改物流信息",
        "description": "3、需要注意的是淘宝有运单号重复检验功能哦，如答果不小心填了以前用过的运单号，页面会提示你“运单号已被使用”，再次查看是否填写错误，如果买家分开购买两个或多个订单，只要买家填写的收货地址是一致的。卖专家就可以两笔订单填写一样的运单号，不会报错哦。\r\n2、选择在线下单，当物流已经有揽信息时无法在发货属后24小时内修改订单的哦。\r\n1、在填写的24小时内才可以修改哦",
        "operationId": "ApiServicesAppDeliveriesUpdatePut",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditDeliveryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditDeliveryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditDeliveryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditDeliveryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Deliveries/Delete": {
      "delete": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Deliveries/GetDeliveryForView": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesGetdeliveryforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Deliveries/GetAll": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShipperFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TrackingNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductNumberFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeliveryForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeliveryForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeliveryForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Deliveries/GenerateUploadToken": {
      "post": {
        "tags": [
          "Deliveries"
        ],
        "operationId": "ApiServicesAppDeliveriesGenerateuploadtokenPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/GetCountries": {
      "get": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsGetcountriesGet",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetSelectedCountries": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetselectedcountriesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetValue": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetvaluePost",
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDate": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdatePost",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDateTime": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdatetimePost",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDateRange": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdaterangePost",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditions": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditionsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditionForEdit": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditionforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/CreateEdition": {
      "post": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionCreateeditionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/UpdateEdition": {
      "put": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionUpdateeditionPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/DeleteEdition": {
      "delete": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionDeleteeditionDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/MoveTenantsToAnotherEdition": {
      "post": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionMovetenantstoanothereditionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditionComboboxItems": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditioncomboboxitemsGet",
        "parameters": [
          {
            "name": "selectedEditionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "addAllItem",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "onlyFreeItems",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/GetTenantCount": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGettenantcountGet",
        "parameters": [
          {
            "name": "editionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Friendship/CreateFriendshipRequest": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipCreatefriendshiprequestPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Friendship/CreateFriendshipRequestByUserName": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipCreatefriendshiprequestbyusernamePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Friendship/BlockUser": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipBlockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Friendship/UnblockUser": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipUnblockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Friendship/AcceptFriendshipRequest": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipAcceptfriendshiprequestPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetTopStatsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGettopstatsdataGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetRecentTenantsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetrecenttenantsdataGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetSubscriptionExpiringTenantsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetsubscriptionexpiringtenantsdataGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetIncomeStatistics": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetincomestatisticsGet",
        "parameters": [
          {
            "name": "IncomeStatisticsDateInterval",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ChartDateInterval"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetEditionTenantStatistics": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGeteditiontenantstatisticsGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostSettings/GetAllSettings": {
      "get": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsGetallsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostSettings/UpdateAllSettings": {
      "put": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsUpdateallsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/HostSettings/SendTestEmail": {
      "post": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsSendtestemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Invoice/GetInvoiceInfo": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "ApiServicesAppInvoiceGetinvoiceinfoGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Invoice/CreateInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "ApiServicesAppInvoiceCreateinvoicePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguages": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguagesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguageForEdit": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguageforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/CreateOrUpdateLanguage": {
      "post": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageCreateorupdatelanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/DeleteLanguage": {
      "delete": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageDeletelanguageDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/SetDefaultLanguage": {
      "post": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageSetdefaultlanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguageTexts": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguagetextsGet",
        "parameters": [
          {
            "name": "SourceName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 128
            }
          },
          {
            "name": "BaseLanguageName",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 0,
              "nullable": true
            }
          },
          {
            "name": "TargetLanguageName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 2
            }
          },
          {
            "name": "TargetValueFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/UpdateLanguageText": {
      "put": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageUpdatelanguagetextPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/GetUserNotifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationGetusernotificationsGet",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/UserNotificationState"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/SetAllNotificationsAsRead": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationSetallnotificationsasreadPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/SetNotificationAsRead": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationSetnotificationasreadPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/GetNotificationSettings": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationGetnotificationsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/UpdateNotificationSettings": {
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationUpdatenotificationsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/DeleteNotification": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationDeletenotificationDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/DeleteAllUserNotifications": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationDeleteallusernotificationsDelete",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/UserNotificationState"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Orders/GetAll": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "管理员获取订单列表",
        "operationId": "ApiServicesAppOrdersGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Orders/GetOrderForEdit": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersGetorderforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Orders/Create": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Orders/Update": {
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Orders/Delete": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Orders/GetOrderForView": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersGetorderforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Orders/GetOrdersToExcel": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "ApiServicesAppOrdersGetorderstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForProvider/GetAll": {
      "get": {
        "tags": [
          "OrdersForProvider"
        ],
        "summary": "供应商获取订单列表",
        "operationId": "ApiServicesAppOrdersforproviderGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForProviderViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForProviderViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForProviderViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForProvider/GetOrderForEdit": {
      "get": {
        "tags": [
          "OrdersForProvider"
        ],
        "operationId": "ApiServicesAppOrdersforproviderGetorderforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForProvider/GetOrderForView": {
      "get": {
        "tags": [
          "OrdersForProvider"
        ],
        "summary": "查看订单详情信息",
        "operationId": "ApiServicesAppOrdersforproviderGetorderforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForProviderViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForProvider/CancelOrder": {
      "post": {
        "tags": [
          "OrdersForProvider"
        ],
        "summary": "订单取消",
        "operationId": "ApiServicesAppOrdersforproviderCancelorderPost",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrdersForProvider/GetOrdersToExcel": {
      "get": {
        "tags": [
          "OrdersForProvider"
        ],
        "operationId": "ApiServicesAppOrdersforproviderGetorderstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/GetAll": {
      "get": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "summary": "采购商获取订单列表",
        "operationId": "ApiServicesAppOrdersforpurchaserGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForPurchaserViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForPurchaserViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetOrderForPurchaserViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/GetOrderForEdit": {
      "get": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "operationId": "ApiServicesAppOrdersforpurchaserGetorderforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/Update": {
      "put": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "operationId": "ApiServicesAppOrdersforpurchaserUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserOrderDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/Delete": {
      "delete": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "operationId": "ApiServicesAppOrdersforpurchaserDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/GetOrderForView": {
      "get": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "operationId": "ApiServicesAppOrdersforpurchaserGetorderforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderForPurchaserViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/GetOrdersToExcel": {
      "get": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "operationId": "ApiServicesAppOrdersforpurchaserGetorderstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "订单状态过滤",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 开始",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 开始",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "description": "订单创建时间 - 结束",
            "schema": {
              "type": "string",
              "description": "订单创建时间 - 结束",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrdersForPurchaser/CancelOrder": {
      "post": {
        "tags": [
          "OrdersForPurchaser"
        ],
        "summary": "采购商订单取消",
        "operationId": "ApiServicesAppOrdersforpurchaserCancelorderPost",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnits": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnitUsers": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitusersGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/CreateOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitCreateorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/UpdateOrganizationUnit": {
      "put": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitUpdateorganizationunitPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/MoveOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitMoveorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/DeleteOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitDeleteorganizationunitDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/RemoveUserFromOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitRemoveuserfromorganizationunitDelete",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/RemoveRoleFromOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitRemoverolefromorganizationunitDelete",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1.0
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/AddUsersToOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitAdduserstoorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/AddRolesToOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitAddrolestoorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/FindUsers": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/FindRoles": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitFindrolesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnitRoles": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitrolesGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetPaymentInfo": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetpaymentinfoGet",
        "parameters": [
          {
            "name": "UpgradeEditionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/CreatePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentCreatepaymentPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/CancelPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentCancelpaymentPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/GetPaymentHistory": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetpaymenthistoryGet",
        "parameters": [
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetActiveGateways": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetactivegatewaysGet",
        "parameters": [
          {
            "name": "RecurringPaymentsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetPayment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetpaymentGet",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetLastCompletedPayment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetlastcompletedpaymentGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/BuyNowSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentBuynowsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/NewRegistrationSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentNewregistrationsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/UpgradeSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentUpgradesucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/ExtendSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentExtendsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/PaymentFailed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentPaymentfailedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PayPalPayment/ConfirmPayment": {
      "post": {
        "tags": [
          "PayPalPayment"
        ],
        "operationId": "ApiServicesAppPaypalpaymentConfirmpaymentPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "paypalOrderId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PayPalPayment/GetConfiguration": {
      "get": {
        "tags": [
          "PayPalPayment"
        ],
        "operationId": "ApiServicesAppPaypalpaymentGetconfigurationGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/GetAllPermissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "ApiServicesAppPermissionGetallpermissionsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Products/GetAll": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "BrandIdFilter",
            "in": "query",
            "description": "厂家、品牌ID过滤",
            "schema": {
              "type": "integer",
              "description": "厂家、品牌ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CategoryIdFilter",
            "in": "query",
            "description": "产品类别ID过滤",
            "schema": {
              "type": "integer",
              "description": "产品类别ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Products/GetProductForEdit": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsGetproductforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Products/Create": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Products/Update": {
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Products/Delete": {
      "delete": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Products/GetProductForView": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsGetproductforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Products/GetProductsToExcel": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsGetproductstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "BrandIdFilter",
            "in": "query",
            "description": "厂家、品牌ID过滤",
            "schema": {
              "type": "integer",
              "description": "厂家、品牌ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CategoryIdFilter",
            "in": "query",
            "description": "产品类别ID过滤",
            "schema": {
              "type": "integer",
              "description": "产品类别ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Products/GetAllForLookup": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "ApiServicesAppProductsGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "BrandIdFilter",
            "in": "query",
            "description": "厂家、品牌ID过滤",
            "schema": {
              "type": "integer",
              "description": "厂家、品牌ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CategoryIdFilter",
            "in": "query",
            "description": "产品类别ID过滤",
            "schema": {
              "type": "integer",
              "description": "产品类别ID过滤",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProductForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetCurrentUserProfileForEdit": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetcurrentuserprofileforeditGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateGoogleAuthenticatorKey": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdategoogleauthenticatorkeyPut",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/SendVerificationSms": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileSendverificationsmsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/VerifySmsCode": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileVerifysmscodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/PrepareCollectedData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfilePreparecollecteddataPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateCurrentUserProfile": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdatecurrentuserprofilePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/ChangePassword": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileChangepasswordPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateProfilePicture": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdateprofilepicturePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/GetPasswordComplexitySetting": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetpasswordcomplexitysettingGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePicture": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepictureGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetFriendProfilePictureById": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetfriendprofilepicturebyidGet",
        "parameters": [
          {
            "name": "ProfilePictureId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePictureById": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepicturebyidGet",
        "parameters": [
          {
            "name": "profilePictureId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/ChangeLanguage": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileChangelanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/DisableGoogleAuthenticator": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileDisablegoogleauthenticatorPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/GetAll": {
      "get": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitLogForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitLogForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitLogForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/GetProfitLogForEdit": {
      "get": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsGetprofitlogforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/Create": {
      "post": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitLogDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/Update": {
      "put": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitLogDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/Delete": {
      "delete": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/GetProfitLogForView": {
      "get": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsGetprofitlogforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitLogForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ProfitLogs/GetProfitLogsToExcel": {
      "get": {
        "tags": [
          "ProfitLogs"
        ],
        "operationId": "ApiServicesAppProfitlogsGetprofitlogstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profits/GetAll": {
      "get": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SKUNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profits/GetProfitForEdit": {
      "get": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsGetprofitforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profits/Create": {
      "post": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profits/Update": {
      "put": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profits/Delete": {
      "delete": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profits/GetProfitForView": {
      "get": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsGetprofitforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profits/GetProfitsToExcel": {
      "get": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsGetprofitstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SKUNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profits/GetAllForLookup": {
      "get": {
        "tags": [
          "Profits"
        ],
        "operationId": "ApiServicesAppProfitsGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxProfitValueFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SKUNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetProfitForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/Callback/Qiniu/DeliveryPhotoUploaded": {
      "post": {
        "tags": [
          "QiniuCallback"
        ],
        "operationId": "CallbackQiniuDeliveryphotouploadedPost",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Key": {
                    "type": "string",
                    "nullable": true
                  },
                  "ETag": {
                    "type": "string",
                    "nullable": true
                  },
                  "DeliveryId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "Key": {
                  "style": "form"
                },
                "ETag": {
                  "style": "form"
                },
                "DeliveryId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/GetAll": {
      "get": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NotifyFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "AutoDealFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinSalesFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxSalesFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SKUNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreatorUserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationLogForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationLogForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationLogForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/GetQuotationLogForEdit": {
      "get": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsGetquotationlogforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/Create": {
      "post": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationLogDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/Update": {
      "put": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditQuotationLogDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditQuotationLogDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditQuotationLogDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditQuotationLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/Delete": {
      "delete": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/GetQuotationLogForView": {
      "get": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsGetquotationlogforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationLogForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/QuotationLogs/GetQuotationLogsToExcel": {
      "get": {
        "tags": [
          "QuotationLogs"
        ],
        "operationId": "ApiServicesAppQuotationlogsGetquotationlogstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NotifyFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "AutoDealFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinSalesFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxSalesFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxCreationTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxDeletionTimeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SKUNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreatorUserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Quotations/GetAll": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "供应商获取自己的报价单",
        "operationId": "ApiServicesAppQuotationsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NotifyFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "AutoDealFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "产品索引",
            "schema": {
              "type": "integer",
              "description": "产品索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Quotations/Create": {
      "post": {
        "tags": [
          "Quotations"
        ],
        "summary": "供应商创建、更新报价信息",
        "operationId": "ApiServicesAppQuotationsCreatePost",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuotationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Quotations/Delete": {
      "delete": {
        "tags": [
          "Quotations"
        ],
        "summary": "供应商取消这条报价",
        "operationId": "ApiServicesAppQuotationsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Quotations/GetQuotationForView": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "operationId": "ApiServicesAppQuotationsGetquotationforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Quotations/GetQuotationsForAdminViewOutput": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "后台获取可供货供应商列表",
        "operationId": "ApiServicesAppQuotationsGetquotationsforadminviewoutputGet",
        "parameters": [
          {
            "name": "SkuIdFilter",
            "in": "query",
            "description": "Sku索引",
            "schema": {
              "type": "integer",
              "description": "Sku索引",
              "format": "int32"
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForAdminViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForAdminViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetQuotationForAdminViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Quotations/GetQuotationForEdit": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "operationId": "ApiServicesAppQuotationsGetquotationforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotationForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Regions/GetAll": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "获取地区列表",
        "operationId": "ApiServicesAppRegionsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "FilterParent",
            "in": "query",
            "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true",
            "schema": {
              "type": "boolean",
              "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Regions/GetRegionForEdit": {
      "get": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsGetregionforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Regions/Create": {
      "post": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Regions/Update": {
      "put": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditRegionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRegionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRegionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditRegionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Regions/Delete": {
      "delete": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Regions/GetRegionsToExcel": {
      "get": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsGetregionstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "FilterParent",
            "in": "query",
            "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true",
            "schema": {
              "type": "boolean",
              "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Regions/GetAllForLookup": {
      "get": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "FilterParent",
            "in": "query",
            "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true",
            "schema": {
              "type": "boolean",
              "description": "父级ID，如果要列出全国省份，传ParentId=2,FilterParent=true"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRegionForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Regions/GetAncestors": {
      "get": {
        "tags": [
          "Regions"
        ],
        "operationId": "ApiServicesAppRegionsGetancestorsGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionLookupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionLookupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegionLookupDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetRoles": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleGetrolesGet",
        "parameters": [
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetRoleForEdit": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleGetroleforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/CreateOrUpdateRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleCreateorupdaterolePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Role/DeleteRole": {
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleDeleteroleDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Session/GetCurrentLoginInformations": {
      "get": {
        "tags": [
          "Session"
        ],
        "operationId": "ApiServicesAppSessionGetcurrentlogininformationsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Session/UpdateUserSignInToken": {
      "put": {
        "tags": [
          "Session"
        ],
        "operationId": "ApiServicesAppSessionUpdateusersignintokenPut",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SKU/GetAll": {
      "get": {
        "tags": [
          "SKU"
        ],
        "summary": "产品SKU",
        "operationId": "ApiServicesAppSKUGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "所属产品ID",
            "schema": {
              "type": "integer",
              "description": "所属产品ID",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SKU/GetSKUForEdit": {
      "get": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUGetskuforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SKU/Create": {
      "post": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSKUDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSKUDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSKUDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSKUDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SKU/Update": {
      "put": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSKUDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSKUDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSKUDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSKUDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SKU/Delete": {
      "delete": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SKU/GetSKUForView": {
      "get": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUGetskuforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SKU/GetSKUToExcel": {
      "get": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUGetskutoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "所属产品ID",
            "schema": {
              "type": "integer",
              "description": "所属产品ID",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SKU/GetAllForLookup": {
      "get": {
        "tags": [
          "SKU"
        ],
        "operationId": "ApiServicesAppSKUGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "所属产品ID",
            "schema": {
              "type": "integer",
              "description": "所属产品ID",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSKUForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetConfiguration": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetconfigurationGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetPayment": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetpaymentGet",
        "parameters": [
          {
            "name": "StripeSessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/CreatePaymentSession": {
      "post": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentCreatepaymentsessionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetPaymentResult": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetpaymentresultGet",
        "parameters": [
          {
            "name": "PaymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subjects/GetAll": {
      "get": {
        "tags": [
          "Subjects"
        ],
        "summary": "中台获取市场需求单列表",
        "operationId": "ApiServicesAppSubjectsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "产品索引",
            "schema": {
              "type": "integer",
              "description": "产品索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "需求单状态",
            "schema": {
              "$ref": "#/components/schemas/SubjectStatus"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subjects/GetSubjectForEdit": {
      "get": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsGetsubjectforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subjects/Create": {
      "post": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subjects/Update": {
      "put": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subjects/Delete": {
      "delete": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subjects/GetSubjectForView": {
      "get": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsGetsubjectforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subjects/GetAllForLookup": {
      "get": {
        "tags": [
          "Subjects"
        ],
        "operationId": "ApiServicesAppSubjectsGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "产品索引",
            "schema": {
              "type": "integer",
              "description": "产品索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "需求单状态",
            "schema": {
              "$ref": "#/components/schemas/SubjectStatus"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/GetAll": {
      "get": {
        "tags": [
          "SubjectsForProvider"
        ],
        "summary": "供应商获取市场需求单列表",
        "operationId": "ApiServicesAppSubjectsforproviderGetallGet",
        "parameters": [
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32"
            }
          },
          {
            "name": "SkuIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForProviderViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForProviderViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForProviderViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/GetSubjectForEdit": {
      "get": {
        "tags": [
          "SubjectsForProvider"
        ],
        "operationId": "ApiServicesAppSubjectsforproviderGetsubjectforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/Create": {
      "post": {
        "tags": [
          "SubjectsForProvider"
        ],
        "operationId": "ApiServicesAppSubjectsforproviderCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/Update": {
      "put": {
        "tags": [
          "SubjectsForProvider"
        ],
        "operationId": "ApiServicesAppSubjectsforproviderUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProviderSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProviderSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProviderSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProviderSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/Delete": {
      "delete": {
        "tags": [
          "SubjectsForProvider"
        ],
        "operationId": "ApiServicesAppSubjectsforproviderDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/GetSubjectForView": {
      "get": {
        "tags": [
          "SubjectsForProvider"
        ],
        "operationId": "ApiServicesAppSubjectsforproviderGetsubjectforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForProviderViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForProvider/GetStats": {
      "get": {
        "tags": [
          "SubjectsForProvider"
        ],
        "summary": "供应商获取市场需求单数据汇总",
        "operationId": "ApiServicesAppSubjectsforproviderGetstatsGet",
        "parameters": [
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SKUIdFilter",
            "in": "query",
            "description": "产品Sku索引",
            "schema": {
              "type": "integer",
              "description": "产品Sku索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectStatOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectStatOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectStatOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/GetAll": {
      "get": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "summary": "采购商获取自己采购需求单列表",
        "operationId": "ApiServicesAppSubjectsforpurchaserGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "产品索引",
            "schema": {
              "type": "integer",
              "description": "产品索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "需求单状态",
            "schema": {
              "$ref": "#/components/schemas/SubjectStatus"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/GetSubjectForEdit": {
      "get": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "operationId": "ApiServicesAppSubjectsforpurchaserGetsubjectforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/Create": {
      "post": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "summary": "采购方创建需求单",
        "operationId": "ApiServicesAppSubjectsforpurchaserCreatePost",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaserSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaserSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaserSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaserSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/Update": {
      "put": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "summary": "采购商修改更新采购单",
        "operationId": "ApiServicesAppSubjectsforpurchaserUpdatePut",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPurchaserSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/Delete": {
      "delete": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "summary": "采购商取消需求单",
        "operationId": "ApiServicesAppSubjectsforpurchaserDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/GetSubjectForView": {
      "get": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "operationId": "ApiServicesAppSubjectsforpurchaserGetsubjectforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubjectForPurchaserViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SubjectsForPurchaser/GetAllForLookup": {
      "get": {
        "tags": [
          "SubjectsForPurchaser"
        ],
        "operationId": "ApiServicesAppSubjectsforpurchaserGetallforlookupGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "description": "模糊搜索",
            "schema": {
              "type": "string",
              "description": "模糊搜索",
              "nullable": true
            }
          },
          {
            "name": "ProductIdFilter",
            "in": "query",
            "description": "产品索引",
            "schema": {
              "type": "integer",
              "description": "产品索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RegionIdFilter",
            "in": "query",
            "description": "地区索引",
            "schema": {
              "type": "integer",
              "description": "地区索引",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "description": "需求单状态",
            "schema": {
              "$ref": "#/components/schemas/SubjectStatus"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserLookupOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserLookupOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSubjectForPurchaserLookupOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subscription/DisableRecurringPayments": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "ApiServicesAppSubscriptionDisablerecurringpaymentsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subscription/EnableRecurringPayments": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "ApiServicesAppSubscriptionEnablerecurringpaymentsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenants": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantsGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EditionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EditionIdSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/CreateTenant": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantCreatetenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenantForEdit": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/UpdateTenant": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUpdatetenantPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/DeleteTenant": {
      "delete": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantDeletetenantDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenantFeaturesForEdit": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantfeaturesforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/UpdateTenantFeatures": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUpdatetenantfeaturesPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/ResetTenantSpecificFeatures": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantResettenantspecificfeaturesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/UnlockTenantAdmin": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUnlocktenantadminPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetMemberActivity": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetmemberactivityGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetDashboardData": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetdashboarddataGet",
        "parameters": [
          {
            "name": "SalesSummaryDatePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SalesSummaryDatePeriod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetTopStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGettopstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetProfitShare": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetprofitshareGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetDailySales": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetdailysalesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetSalesSummary": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetsalessummaryGet",
        "parameters": [
          {
            "name": "SalesSummaryDatePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SalesSummaryDatePeriod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetRegionalStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetregionalstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetGeneralStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetgeneralstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/RegisterTenant": {
      "post": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationRegistertenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/GetEditionsForSelect": {
      "get": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationGeteditionsforselectGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/GetEdition": {
      "get": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationGeteditionGet",
        "parameters": [
          {
            "name": "editionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantSettings/GetAllSettings": {
      "get": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsGetallsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantSettings/UpdateAllSettings": {
      "put": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsUpdateallsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/ClearLogo": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsClearlogoPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/ClearCustomCss": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsClearcustomcssPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/SendTestEmail": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsSendtestemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Timing/GetTimezones": {
      "get": {
        "tags": [
          "Timing"
        ],
        "operationId": "ApiServicesAppTimingGettimezonesGet",
        "parameters": [
          {
            "name": "DefaultTimezoneScope",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SettingScopes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Timing/GetTimezoneComboboxItems": {
      "get": {
        "tags": [
          "Timing"
        ],
        "operationId": "ApiServicesAppTimingGettimezonecomboboxitemsGet",
        "parameters": [
          {
            "name": "SelectedTimezoneId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/Authenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthAuthenticatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/RefreshToken": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthRefreshtokenPost",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/LogOut": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthLogoutGet",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TokenAuth/SendTwoFactorAuthCode": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthSendtwofactorauthcodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TokenAuth/ImpersonatedAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthImpersonatedauthenticatePost",
        "parameters": [
          {
            "name": "impersonationToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/LinkedAccountAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthLinkedaccountauthenticatePost",
        "parameters": [
          {
            "name": "switchAccountToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/GetExternalAuthenticationProviders": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthGetexternalauthenticationprovidersGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/ExternalAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthExternalauthenticatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/TestNotification": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthTestnotificationGet",
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "severity",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "info",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Transactions/GetAll": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinAmountFilter",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "MaxAmountFilter",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "NotesFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTransactionForViewOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTransactionForViewOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTransactionForViewOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Transactions/GetTransactionForEdit": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsGettransactionforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Transactions/Create": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Transactions/Update": {
      "put": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditTransactionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTransactionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTransactionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Transactions/Delete": {
      "delete": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Transactions/GetTransactionsToExcel": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "ApiServicesAppTransactionsGettransactionstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinAmountFilter",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "MaxAmountFilter",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "NotesFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/GetUiManagementSettings": {
      "get": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsGetuimanagementsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UpdateUiManagementSettings": {
      "put": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUpdateuimanagementsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UpdateDefaultUiManagementSettings": {
      "put": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUpdatedefaultuimanagementsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UseSystemDefaultSettings": {
      "post": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUsesystemdefaultsettingsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/ChangeThemeWithDefaultValues": {
      "post": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsChangethemewithdefaultvaluesPost",
        "parameters": [
          {
            "name": "themeName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/GetUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetusersGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OnlyLockedUsers",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 1000.0,
              "minimum": 1.0
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 0.0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUsersToExcel": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OnlyLockedUsers",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserForEdit": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserPermissionsForEdit": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserpermissionsforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ResetUserSpecificPermissions": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserResetuserspecificpermissionsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/UpdateUserPermissions": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserUpdateuserpermissionsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/CreateOrUpdateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserCreateorupdateuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/DeleteUser": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserDeleteuserDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/UnlockUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserUnlockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserLink/LinkToUser": {
      "post": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkLinktouserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserLink/GetLinkedUsers": {
      "get": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkGetlinkedusersGet",
        "parameters": [
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserLink/GetRecentlyUsedLinkedUsers": {
      "get": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkGetrecentlyusedlinkedusersGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserLink/UnlinkUser": {
      "post": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkUnlinkuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserLogin/GetRecentUserLoginAttempts": {
      "get": {
        "tags": [
          "UserLogin"
        ],
        "operationId": "ApiServicesAppUserloginGetrecentuserloginattemptsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebLog/GetLatestWebLogs": {
      "get": {
        "tags": [
          "WebLog"
        ],
        "operationId": "ApiServicesAppWeblogGetlatestweblogsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebLog/DownloadWebLogs": {
      "post": {
        "tags": [
          "WebLog"
        ],
        "operationId": "ApiServicesAppWeblogDownloadweblogsPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IsTenantAvailableInput": {
        "type": "object",
        "required": [
          "tenancyName"
        ],
        "properties": {
          "tenancyName": {
            "type": "string",
            "maxLength": 64
          }
        }
      },
      "TenantAvailabilityState": {
        "type": "string",
        "x-enumNames": [
          "Available",
          "InActive",
          "NotFound"
        ],
        "enum": [
          "Available",
          "InActive",
          "NotFound"
        ]
      },
      "IsTenantAvailableOutput": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TenantAvailabilityState"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serverRootAddress": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResolveTenantIdInput": {
        "type": "object",
        "properties": {
          "c": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterInput": {
        "type": "object",
        "required": [
          "emailAddress",
          "name",
          "password",
          "surname",
          "userName"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "surname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "userName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "emailAddress": {
            "type": "string",
            "format": "email",
            "maxLength": 256,
            "minLength": 0
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterOutput": {
        "type": "object",
        "properties": {
          "canLogin": {
            "type": "boolean"
          }
        }
      },
      "SendPasswordResetCodeInput": {
        "type": "object",
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "ResetPasswordInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "resetCode": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "string",
            "nullable": true
          },
          "c": {
            "type": "string",
            "description": "Encrypted values for {TenantId}, {UserId} and so on.",
            "nullable": true
          }
        }
      },
      "ResetPasswordOutput": {
        "type": "object",
        "properties": {
          "canLogin": {
            "type": "boolean"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendEmailActivationLinkInput": {
        "type": "object",
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "ActivateEmailInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "confirmationCode": {
            "type": "string",
            "nullable": true
          },
          "c": {
            "type": "string",
            "description": "Encrypted values for {TenantId}, {UserId} and so on.",
            "nullable": true
          }
        }
      },
      "ImpersonateInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          }
        }
      },
      "ImpersonateOutput": {
        "type": "object",
        "properties": {
          "impersonationToken": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SwitchToLinkedAccountInput": {
        "type": "object",
        "properties": {
          "targetTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetUserId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          }
        }
      },
      "SwitchToLinkedAccountOutput": {
        "type": "object",
        "properties": {
          "switchAccountToken": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuditLogListDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "impersonatorTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "impersonatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "methodName": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          },
          "executionDuration": {
            "type": "integer",
            "format": "int32"
          },
          "clientIpAddress": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "browserInfo": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfAuditLogListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AuditLogListDto"
            }
          }
        }
      },
      "FileDto": {
        "type": "object",
        "required": [
          "fileName",
          "fileToken"
        ],
        "properties": {
          "fileName": {
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "fileToken": {
            "type": "string"
          }
        }
      },
      "NameValueDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityChangeType": {
        "type": "string",
        "x-enumNames": [
          "Created",
          "Updated",
          "Deleted"
        ],
        "enum": [
          "Created",
          "Updated",
          "Deleted"
        ]
      },
      "EntityChangeListDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "changeTime": {
            "type": "string",
            "format": "date-time"
          },
          "entityTypeFullName": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "$ref": "#/components/schemas/EntityChangeType"
          },
          "changeTypeName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "entityChangeSetId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfEntityChangeListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EntityChangeListDto"
            }
          }
        }
      },
      "EntityPropertyChangeDto": {
        "type": "object",
        "properties": {
          "entityChangeId": {
            "type": "integer",
            "format": "int64"
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyTypeFullName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BrandCategoryDto": {
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetBrandCategoryForViewOutput": {
        "type": "object",
        "properties": {
          "brandCategory": {
            "$ref": "#/components/schemas/BrandCategoryDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetBrandCategoryForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetBrandCategoryForViewOutput"
            }
          }
        }
      },
      "EditBrandCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetBrandCategoryForEditOutput": {
        "type": "object",
        "properties": {
          "brandCategory": {
            "$ref": "#/components/schemas/EditBrandCategoryDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateBrandCategoryDto": {
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BrandCategoryLookupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetBrandCategoryForLookupOutput": {
        "type": "object",
        "properties": {
          "brandCategory": {
            "$ref": "#/components/schemas/BrandCategoryLookupDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetBrandCategoryForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetBrandCategoryForLookupOutput"
            }
          }
        }
      },
      "BrandDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "iconSrc": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetBrandForViewOutput": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          }
        }
      },
      "PagedResultDtoOfGetBrandForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetBrandForViewOutput"
            }
          }
        }
      },
      "EditBrandDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "iconSrc": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "GetBrandForEditOutput": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/EditBrandDto"
          }
        }
      },
      "CreateBrandDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "iconSrc": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "BrandLookupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "iconSrc": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetBrandForLookupOutput": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/BrandLookupDto"
          }
        }
      },
      "PagedResultDtoOfGetBrandForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetBrandForLookupOutput"
            }
          }
        }
      },
      "CacheDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListResultDtoOfCacheDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CacheDto"
            }
          }
        }
      },
      "EntityDtoOfString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetCategoryForViewOutput": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CategoryDto"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetCategoryForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetCategoryForViewOutput"
            }
          }
        }
      },
      "EditCategoryDto": {
        "type": "object",
        "required": [
          "isActive",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GetCategoryForEditOutput": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/EditCategoryDto"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "required": [
          "isActive",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CategoryLookupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetCategoryForLookupOutput": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/CategoryLookupDto"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetCategoryForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetCategoryForLookupOutput"
            }
          }
        }
      },
      "FriendshipState": {
        "type": "string",
        "x-enumNames": [
          "Accepted",
          "Blocked"
        ],
        "enum": [
          "Accepted",
          "Blocked"
        ]
      },
      "FriendDto": {
        "type": "object",
        "properties": {
          "friendUserId": {
            "type": "integer",
            "format": "int64"
          },
          "friendTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "friendUserName": {
            "type": "string",
            "nullable": true
          },
          "friendTenancyName": {
            "type": "string",
            "nullable": true
          },
          "friendProfilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unreadMessageCount": {
            "type": "integer",
            "format": "int32"
          },
          "isOnline": {
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/FriendshipState"
          }
        }
      },
      "GetUserChatFriendsWithSettingsOutput": {
        "type": "object",
        "properties": {
          "serverTime": {
            "type": "string",
            "format": "date-time"
          },
          "friends": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FriendDto"
            }
          }
        }
      },
      "ChatSide": {
        "type": "string",
        "x-enumNames": [
          "Sender",
          "Receiver"
        ],
        "enum": [
          "Sender",
          "Receiver"
        ]
      },
      "ChatMessageReadState": {
        "type": "string",
        "x-enumNames": [
          "Unread",
          "Read"
        ],
        "enum": [
          "Unread",
          "Read"
        ]
      },
      "ChatMessageDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetUserId": {
            "type": "integer",
            "format": "int64"
          },
          "targetTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "side": {
            "$ref": "#/components/schemas/ChatSide"
          },
          "readState": {
            "$ref": "#/components/schemas/ChatMessageReadState"
          },
          "receiverReadState": {
            "$ref": "#/components/schemas/ChatMessageReadState"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "sharedMessageId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListResultDtoOfChatMessageDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChatMessageDto"
            }
          }
        }
      },
      "MarkAllUnreadMessagesOfUserAsReadInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SubscribableEditionComboboxItemDto": {
        "type": "object",
        "properties": {
          "isFree": {
            "type": "boolean",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          },
          "isSelected": {
            "type": "boolean"
          }
        }
      },
      "ListResultDtoOfSubscribableEditionComboboxItemDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
            }
          }
        }
      },
      "FindUsersInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "filter": {
            "type": "string",
            "nullable": true
          },
          "maxResultCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 1.0
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 0.0
          }
        }
      },
      "PagedResultDtoOfNameValueDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "GetDefaultEditionNameOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Widget": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "positionX": {
            "type": "integer",
            "format": "int32"
          },
          "positionY": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Widget"
            }
          }
        }
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          }
        }
      },
      "SavePageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          }
        }
      },
      "RenamePageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddNewPageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddNewPageOutput": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddWidgetInput": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string",
            "nullable": true
          },
          "pageId": {
            "type": "string",
            "nullable": true
          },
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WidgetFilterOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "WidgetOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "filters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WidgetFilterOutput"
            }
          }
        }
      },
      "DashboardOutput": {
        "type": "object",
        "description": "This class stores filtered dashboard information by user",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WidgetOutput"
            }
          }
        }
      },
      "EditDeliveryDto": {
        "type": "object",
        "required": [
          "productNumber",
          "proofPictures",
          "shipper",
          "trackingNumber"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "shipper": {
            "type": "string"
          },
          "trackingNumber": {
            "type": "string"
          },
          "productNumber": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "proofPictures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetDeliveryForEditOutput": {
        "type": "object",
        "properties": {
          "delivery": {
            "$ref": "#/components/schemas/EditDeliveryDto"
          }
        }
      },
      "CreateDeliveryDto": {
        "type": "object",
        "required": [
          "productNumber",
          "proofPictures",
          "shipper",
          "trackingNumber"
        ],
        "properties": {
          "shipper": {
            "type": "string"
          },
          "trackingNumber": {
            "type": "string"
          },
          "productNumber": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "proofPictures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeliveryDto": {
        "type": "object",
        "properties": {
          "shipper": {
            "type": "string",
            "description": "物流公司",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "description": "物流单号",
            "nullable": true
          },
          "productNumber": {
            "type": "array",
            "description": "发货商品IMEI列表",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "proofPhotos": {
            "type": "array",
            "description": "发货凭证图片",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetDeliveryForViewOutput": {
        "type": "object",
        "properties": {
          "delivery": {
            "$ref": "#/components/schemas/DeliveryDto"
          }
        }
      },
      "#/definitions/String": {
        "type": "string"
      },
      "PagedResultDtoOfGetDeliveryForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetDeliveryForViewOutput"
            }
          }
        }
      },
      "EntityDtoOfInt64": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NameValueOfString": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StringOutput": {
        "type": "object",
        "properties": {
          "output": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DateToStringOutput": {
        "type": "object",
        "properties": {
          "dateString": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EditionListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "dailyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weeklyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListResultDtoOfEditionListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EditionListDto"
            }
          }
        }
      },
      "EditionEditDto": {
        "type": "object",
        "required": [
          "displayName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IValueValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "LocalizableComboboxItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LocalizableComboboxItemSourceDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocalizableComboboxItemDto"
            }
          }
        }
      },
      "FeatureInputTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "object"
            }
          },
          "validator": {
            "$ref": "#/components/schemas/IValueValidator"
          },
          "itemSource": {
            "$ref": "#/components/schemas/LocalizableComboboxItemSourceDto"
          }
        }
      },
      "FlatFeatureDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "$ref": "#/components/schemas/FeatureInputTypeDto"
          }
        }
      },
      "GetEditionEditOutput": {
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionEditDto"
          },
          "featureValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          },
          "features": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatFeatureDto"
            }
          }
        }
      },
      "EditionCreateDto": {
        "type": "object",
        "required": [
          "displayName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "dailyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weeklyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateEditionDto": {
        "type": "object",
        "required": [
          "edition",
          "featureValues"
        ],
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionCreateDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "UpdateEditionDto": {
        "type": "object",
        "required": [
          "edition",
          "featureValues"
        ],
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionEditDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "MoveTenantsToAnotherEditionDto": {
        "type": "object",
        "properties": {
          "sourceEditionId": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "targetEditionId": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          }
        }
      },
      "CreateFriendshipRequestInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateFriendshipRequestByUserNameInput": {
        "type": "object",
        "required": [
          "tenancyName"
        ],
        "properties": {
          "tenancyName": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BlockUserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UnblockUserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AcceptFriendshipRequestInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "TopStatsData": {
        "type": "object",
        "properties": {
          "newTenantsCount": {
            "type": "integer",
            "format": "int32"
          },
          "newSubscriptionAmount": {
            "type": "number",
            "format": "double"
          },
          "dashboardPlaceholder1": {
            "type": "integer",
            "format": "int32"
          },
          "dashboardPlaceholder2": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetRecentTenantsOutput": {
        "type": "object",
        "properties": {
          "recentTenantsDayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxRecentTenantsShownCount": {
            "type": "integer",
            "format": "int32"
          },
          "tenantCreationStartDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExpiringTenant": {
        "type": "object",
        "properties": {
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "remainingDayCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetExpiringTenantsOutput": {
        "type": "object",
        "properties": {
          "expiringTenants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExpiringTenant"
            }
          },
          "subscriptionEndAlertDayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxExpiringTenantsShownCount": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptionEndDateStart": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionEndDateEnd": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChartDateInterval": {
        "type": "string",
        "x-enumNames": [
          "Daily",
          "Weekly",
          "Monthly"
        ],
        "enum": [
          "Daily",
          "Weekly",
          "Monthly"
        ]
      },
      "IncomeStatistic": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GetIncomeStatisticsDataOutput": {
        "type": "object",
        "properties": {
          "incomeStatistics": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IncomeStatistic"
            }
          }
        }
      },
      "TenantEdition": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetEditionTenantStatisticsOutput": {
        "type": "object",
        "properties": {
          "editionStatistics": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TenantEdition"
            }
          }
        }
      },
      "GeneralSettingsEditDto": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "timezoneForComparison": {
            "type": "string",
            "description": "This value is only used for comparing user's timezone to default timezone",
            "nullable": true
          }
        }
      },
      "SessionTimeOutSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "timeOutSecond": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 10.0
          },
          "showTimeOutNotificationSecond": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 10.0
          }
        }
      },
      "HostUserManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEmailConfirmationRequiredForLogin": {
            "type": "boolean"
          },
          "smsVerificationEnabled": {
            "type": "boolean"
          },
          "isCookieConsentEnabled": {
            "type": "boolean"
          },
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          },
          "useCaptchaOnLogin": {
            "type": "boolean"
          },
          "sessionTimeOutSettings": {
            "$ref": "#/components/schemas/SessionTimeOutSettingsEditDto"
          }
        }
      },
      "EmailSettingsEditDto": {
        "type": "object",
        "properties": {
          "defaultFromAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "nullable": true
          },
          "smtpHost": {
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "type": "string",
            "nullable": true
          },
          "smtpDomain": {
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          }
        }
      },
      "TenantManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "allowSelfRegistration": {
            "type": "boolean"
          },
          "isNewRegisteredTenantActiveByDefault": {
            "type": "boolean"
          },
          "useCaptchaOnRegistration": {
            "type": "boolean"
          },
          "defaultEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PasswordComplexitySetting": {
        "type": "object",
        "properties": {
          "requireDigit": {
            "type": "boolean"
          },
          "requireLowercase": {
            "type": "boolean"
          },
          "requireNonAlphanumeric": {
            "type": "boolean"
          },
          "requireUppercase": {
            "type": "boolean"
          },
          "requiredLength": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserLockOutSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "maxFailedAccessAttemptsBeforeLockout": {
            "type": "integer",
            "format": "int32"
          },
          "defaultAccountLockoutSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TwoFactorLoginSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabledForApplication": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isEmailProviderEnabled": {
            "type": "boolean"
          },
          "isSmsProviderEnabled": {
            "type": "boolean"
          },
          "isRememberBrowserEnabled": {
            "type": "boolean"
          },
          "isGoogleAuthenticatorEnabled": {
            "type": "boolean"
          }
        }
      },
      "SecuritySettingsEditDto": {
        "type": "object",
        "properties": {
          "allowOneConcurrentLoginPerUser": {
            "type": "boolean"
          },
          "useDefaultPasswordComplexitySettings": {
            "type": "boolean"
          },
          "passwordComplexity": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          },
          "defaultPasswordComplexity": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          },
          "userLockOut": {
            "$ref": "#/components/schemas/UserLockOutSettingsEditDto"
          },
          "twoFactorLogin": {
            "$ref": "#/components/schemas/TwoFactorLoginSettingsEditDto"
          }
        }
      },
      "HostBillingSettingsEditDto": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OtherSettingsEditDto": {
        "type": "object",
        "properties": {
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          }
        }
      },
      "OrderingSettingsEditDto": {
        "type": "object",
        "properties": {
          "defaultProfit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HostSettingsEditDto": {
        "type": "object",
        "required": [
          "email",
          "general",
          "orderingSettings",
          "security",
          "tenantManagement",
          "userManagement"
        ],
        "properties": {
          "general": {
            "$ref": "#/components/schemas/GeneralSettingsEditDto"
          },
          "userManagement": {
            "$ref": "#/components/schemas/HostUserManagementSettingsEditDto"
          },
          "email": {
            "$ref": "#/components/schemas/EmailSettingsEditDto"
          },
          "tenantManagement": {
            "$ref": "#/components/schemas/TenantManagementSettingsEditDto"
          },
          "security": {
            "$ref": "#/components/schemas/SecuritySettingsEditDto"
          },
          "billing": {
            "$ref": "#/components/schemas/HostBillingSettingsEditDto"
          },
          "otherSettings": {
            "$ref": "#/components/schemas/OtherSettingsEditDto"
          },
          "orderingSettings": {
            "$ref": "#/components/schemas/OrderingSettingsEditDto"
          }
        }
      },
      "SendTestEmailInput": {
        "type": "object",
        "required": [
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "tenantLegalName": {
            "type": "string",
            "nullable": true
          },
          "tenantAddress": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "tenantTaxNo": {
            "type": "string",
            "nullable": true
          },
          "hostLegalName": {
            "type": "string",
            "nullable": true
          },
          "hostAddress": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "subscriptionPaymentId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApplicationLanguageListDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetLanguagesOutput": {
        "type": "object",
        "properties": {
          "defaultLanguageName": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ApplicationLanguageListDto"
            }
          }
        }
      },
      "ApplicationLanguageEditDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "icon": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Mapped from Language.IsDisabled with using manual mapping in CustomDtoMapper.cs"
          }
        }
      },
      "ComboboxItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          },
          "isSelected": {
            "type": "boolean"
          }
        }
      },
      "GetLanguageForEditOutput": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/ApplicationLanguageEditDto"
          },
          "languageNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComboboxItemDto"
            }
          },
          "flags": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ComboboxItemDto"
            }
          }
        }
      },
      "CreateOrUpdateLanguageInput": {
        "type": "object",
        "required": [
          "language"
        ],
        "properties": {
          "language": {
            "$ref": "#/components/schemas/ApplicationLanguageEditDto"
          }
        }
      },
      "SetDefaultLanguageInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          }
        }
      },
      "LanguageTextListDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "baseValue": {
            "type": "string",
            "nullable": true
          },
          "targetValue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfLanguageTextListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LanguageTextListDto"
            }
          }
        }
      },
      "UpdateLanguageTextInput": {
        "type": "object",
        "required": [
          "key",
          "languageName",
          "sourceName",
          "value"
        ],
        "properties": {
          "languageName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "sourceName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "key": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "value": {
            "type": "string",
            "maxLength": 67108864,
            "minLength": 0
          }
        }
      },
      "UserNotificationState": {
        "type": "string",
        "x-enumNames": [
          "Unread",
          "Read"
        ],
        "enum": [
          "Unread",
          "Read"
        ]
      },
      "NotificationData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "properties": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MemberTypes": {
        "type": "string",
        "x-enumNames": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ]
      },
      "MethodAttributes": {
        "type": "string",
        "x-enumNames": [
          "ReuseSlot",
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "VtableLayoutMask",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "enum": [
          "ReuseSlot",
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "NewSlot",
          "VtableLayoutMask",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ]
      },
      "MethodImplAttributes": {
        "type": "string",
        "x-enumNames": [
          "IL",
          "Managed",
          "Native",
          "OPTIL",
          "Runtime",
          "CodeTypeMask",
          "Unmanaged",
          "ManagedMask",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "enum": [
          "IL",
          "Managed",
          "Native",
          "OPTIL",
          "Runtime",
          "CodeTypeMask",
          "Unmanaged",
          "ManagedMask",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ]
      },
      "CallingConventions": {
        "type": "string",
        "x-enumNames": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ]
      },
      "IntPtr": {
        "type": "object"
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        }
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "type": "object",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            }
          },
          "namedArguments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            }
          }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "moduleVersionId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "scopeName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "EventAttributes": {
        "type": "string",
        "x-enumNames": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "ReservedMask"
        ],
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "ReservedMask"
        ]
      },
      "ParameterAttributes": {
        "type": "string",
        "x-enumNames": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ]
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "type": "object",
            "readOnly": true,
            "nullable": true
          },
          "rawDefaultValue": {
            "type": "object",
            "readOnly": true,
            "nullable": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "ICustomAttributeProvider": {
        "type": "object"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "FieldAttributes": {
        "type": "string",
        "x-enumNames": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ]
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        }
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "PropertyAttributes": {
        "type": "string",
        "x-enumNames": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ]
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "GenericParameterAttributes": {
        "type": "string",
        "x-enumNames": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ]
      },
      "TypeAttributes": {
        "type": "string",
        "x-enumNames": [
          "NotPublic",
          "AutoLayout",
          "AnsiClass",
          "Class",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "NestedFamORAssem",
          "VisibilityMask",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "ClassSemanticsMask",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "CustomFormatClass",
          "StringFormatMask",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "enum": [
          "NotPublic",
          "AutoLayout",
          "AnsiClass",
          "Class",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "NestedFamORAssem",
          "VisibilityMask",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "Interface",
          "ClassSemanticsMask",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "CustomFormatClass",
          "StringFormatMask",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ]
      },
      "LayoutKind": {
        "type": "string",
        "x-enumNames": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ]
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          },
          "typeId": {
            "type": "object",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        }
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "genericTypeParameters": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "declaredConstructors": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            }
          },
          "declaredEvents": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            }
          },
          "declaredFields": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            }
          },
          "declaredMembers": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            }
          },
          "declaredMethods": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            }
          },
          "declaredNestedTypes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            }
          },
          "declaredProperties": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            }
          },
          "implementedInterfaces": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "genericParameterPosition": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "SecurityRuleSet": {
        "type": "string",
        "x-enumNames": [
          "None",
          "Level1",
          "Level2"
        ],
        "enum": [
          "None",
          "Level1",
          "Level2"
        ]
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            }
          },
          "exportedTypes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "codeBase": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "escapedCodeBase": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Module"
            }
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true
          },
          "hostContext": {
            "type": "integer",
            "readOnly": true,
            "format": "int64"
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        }
      },
      "Type": {
        "type": "object",
        "properties": {
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "genericParameterPosition": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "customAttributes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            }
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      },
      "NotificationSeverity": {
        "type": "string",
        "x-enumNames": [
          "Info",
          "Success",
          "Warn",
          "Error",
          "Fatal"
        ],
        "enum": [
          "Info",
          "Success",
          "Warn",
          "Error",
          "Fatal"
        ]
      },
      "TenantNotification": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationName": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationData"
          },
          "entityType": {
            "$ref": "#/components/schemas/Type"
          },
          "entityTypeName": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "object",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/NotificationSeverity"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserNotification": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/UserNotificationState"
          },
          "notification": {
            "$ref": "#/components/schemas/TenantNotification"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "GetNotificationsOutput": {
        "type": "object",
        "properties": {
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserNotification"
            }
          }
        }
      },
      "EntityDtoOfGuid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "NotificationSubscriptionWithDisplayNameDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 96
          },
          "isSubscribed": {
            "type": "boolean"
          }
        }
      },
      "GetNotificationSettingsOutput": {
        "type": "object",
        "properties": {
          "receiveNotifications": {
            "type": "boolean"
          },
          "notifications": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NotificationSubscriptionWithDisplayNameDto"
            }
          }
        }
      },
      "NotificationSubscriptionDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 96
          },
          "isSubscribed": {
            "type": "boolean"
          }
        }
      },
      "UpdateNotificationSettingsInput": {
        "type": "object",
        "properties": {
          "receiveNotifications": {
            "type": "boolean"
          },
          "notifications": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NotificationSubscriptionDto"
            }
          }
        }
      },
      "OrderStatus": {
        "type": "string",
        "x-enumNames": [
          "Collecting",
          "Paying",
          "Sending",
          "Shipping",
          "Finished",
          "Cancelling",
          "Intercepting",
          "Returning",
          "Closed",
          "Cancelled"
        ],
        "enum": [
          "Collecting",
          "Paying",
          "Sending",
          "Shipping",
          "Finished",
          "Cancelling",
          "Intercepting",
          "Returning",
          "Closed",
          "Cancelled"
        ]
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "数量",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "address": {
            "type": "string",
            "description": "收货人地址",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "收货人",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "收货人联系方式",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "订单备注",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "产品名称",
            "nullable": true
          },
          "model": {
            "type": "string",
            "description": "产品型号",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "产品标题",
            "nullable": true
          },
          "details": {
            "type": "string",
            "description": "产品详情",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "产品描述",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SKUDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "guidePrice": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetOrderForViewOutput": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderDto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "sku": {
            "$ref": "#/components/schemas/SKUDto"
          },
          "delivery": {
            "$ref": "#/components/schemas/DeliveryDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetOrderForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetOrderForViewOutput"
            }
          }
        }
      },
      "EditOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subjectId": {
            "type": "integer",
            "format": "int64"
          },
          "quotationId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetOrderForEditOutput": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/EditOrderDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "integer",
            "format": "int64"
          },
          "quotationId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProviderOrderDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "数量",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "address": {
            "type": "string",
            "description": "收货人地址",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "收货人",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "收货人联系方式",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "quotationPrice": {
            "type": "number",
            "description": "供货价",
            "format": "double"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "lastModificationTime": {
            "type": "string",
            "description": "最后修改时间",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetOrderForProviderViewOutput": {
        "type": "object",
        "properties": {
          "providerOrder": {
            "$ref": "#/components/schemas/ProviderOrderDto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "sku": {
            "$ref": "#/components/schemas/SKUDto"
          },
          "delivery": {
            "$ref": "#/components/schemas/DeliveryDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetOrderForProviderViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetOrderForProviderViewOutput"
            }
          }
        }
      },
      "EditProviderOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetOrderForProviderEditOutput": {
        "type": "object",
        "properties": {
          "providerOrder": {
            "$ref": "#/components/schemas/EditProviderOrderDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PurchaserOrderDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "数量",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "address": {
            "type": "string",
            "description": "收货人地址",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "收货人",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "收货人联系方式",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "备注",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "format": "double"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetOrderForPurchaserViewOutput": {
        "type": "object",
        "properties": {
          "purchaserOrder": {
            "$ref": "#/components/schemas/PurchaserOrderDto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "sku": {
            "$ref": "#/components/schemas/SKUDto"
          },
          "delivery": {
            "$ref": "#/components/schemas/DeliveryDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetOrderForPurchaserViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetOrderForPurchaserViewOutput"
            }
          }
        }
      },
      "EditPurchaserOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetOrderForPurchaserEditOutput": {
        "type": "object",
        "properties": {
          "purchaserOrder": {
            "$ref": "#/components/schemas/EditPurchaserOrderDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OrganizationUnitDto": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "roleCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ListResultDtoOfOrganizationUnitDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitDto"
            }
          }
        }
      },
      "OrganizationUnitUserListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfOrganizationUnitUserListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitUserListDto"
            }
          }
        }
      },
      "CreateOrganizationUnitInput": {
        "type": "object",
        "required": [
          "displayName"
        ],
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          }
        }
      },
      "UpdateOrganizationUnitInput": {
        "type": "object",
        "required": [
          "displayName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "displayName": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          }
        }
      },
      "MoveOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "newParentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "UsersToOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "organizationUnitId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          }
        }
      },
      "RolesToOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "organizationUnitId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          }
        }
      },
      "FindOrganizationUnitUsersInput": {
        "type": "object",
        "properties": {
          "organizationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "filter": {
            "type": "string",
            "nullable": true
          },
          "maxResultCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 1.0
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 0.0
          }
        }
      },
      "FindOrganizationUnitRolesInput": {
        "type": "object",
        "properties": {
          "organizationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "filter": {
            "type": "string",
            "nullable": true
          },
          "maxResultCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 1.0
          },
          "skipCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 0.0
          }
        }
      },
      "OrganizationUnitRoleListDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfOrganizationUnitRoleListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitRoleListDto"
            }
          }
        }
      },
      "EditionSelectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dailyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "weeklyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFree": {
            "type": "boolean"
          },
          "additionalData": {
            "type": "object",
            "nullable": true,
            "properties": {
              "Paypal": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Stripe": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PaymentInfoDto": {
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionSelectDto"
          },
          "additionalPrice": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EditionPaymentType": {
        "type": "string",
        "x-enumNames": [
          "NewRegistration",
          "BuyNow",
          "Upgrade",
          "Extend"
        ],
        "enum": [
          "NewRegistration",
          "BuyNow",
          "Upgrade",
          "Extend"
        ]
      },
      "PaymentPeriodType": {
        "type": "string",
        "x-enumNames": [
          "Daily",
          "Weekly",
          "Monthly",
          "Annual"
        ],
        "enum": [
          "Daily",
          "Weekly",
          "Monthly",
          "Annual"
        ]
      },
      "SubscriptionPaymentGatewayType": {
        "type": "string",
        "x-enumNames": [
          "Paypal",
          "Stripe"
        ],
        "enum": [
          "Paypal",
          "Stripe"
        ]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "editionPaymentType": {
            "$ref": "#/components/schemas/EditionPaymentType"
          },
          "paymentPeriodType": {
            "$ref": "#/components/schemas/PaymentPeriodType"
          },
          "subscriptionPaymentGatewayType": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "recurringPaymentEnabled": {
            "type": "boolean"
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "errorUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CancelPaymentDto": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          }
        }
      },
      "SubscriptionPaymentListDto": {
        "type": "object",
        "properties": {
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPeriodType": {
            "type": "string",
            "nullable": true
          },
          "externalPaymentId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PagedResultDtoOfSubscriptionPaymentListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubscriptionPaymentListDto"
            }
          }
        }
      },
      "PaymentGatewayModel": {
        "type": "object",
        "properties": {
          "gatewayType": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "supportsRecurringPayments": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionPaymentStatus": {
        "type": "string",
        "x-enumNames": [
          "NotPaid",
          "Paid",
          "Failed",
          "Cancelled",
          "Completed"
        ],
        "enum": [
          "NotPaid",
          "Paid",
          "Failed",
          "Cancelled",
          "Completed"
        ]
      },
      "SubscriptionPaymentDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPeriodType": {
            "$ref": "#/components/schemas/PaymentPeriodType"
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionPaymentStatus"
          },
          "isRecurring": {
            "type": "boolean"
          },
          "externalPaymentId": {
            "type": "string",
            "nullable": true
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "errorUrl": {
            "type": "string",
            "nullable": true
          },
          "editionPaymentType": {
            "$ref": "#/components/schemas/EditionPaymentType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PayPalConfigurationDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "demoUsername": {
            "type": "string",
            "nullable": true
          },
          "demoPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FlatPermissionWithLevelDto": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isGrantedByDefault": {
            "type": "boolean"
          }
        }
      },
      "ListResultDtoOfFlatPermissionWithLevelDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatPermissionWithLevelDto"
            }
          }
        }
      },
      "GetProductForViewOutput": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetProductForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetProductForViewOutput"
            }
          }
        }
      },
      "EditProductDto": {
        "type": "object",
        "required": [
          "model",
          "name",
          "skuPropTitles",
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "skuPropTitles": {
            "type": "array",
            "description": "SKU标题集合",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetProductForEditOutput": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/EditProductDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateProductDto": {
        "type": "object",
        "required": [
          "model",
          "name",
          "skuPropTitles",
          "title"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "skuPropTitles": {
            "type": "array",
            "description": "SKU标题集合",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "brandId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductLookupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetProductForLookupOutput": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductLookupDto"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetProductForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetProductForLookupOutput"
            }
          }
        }
      },
      "CurrentUserProfileEditDto": {
        "type": "object",
        "required": [
          "emailAddress",
          "name",
          "surname",
          "userName"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "surname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "userName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "emailAddress": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 24,
            "minLength": 0,
            "nullable": true
          },
          "isPhoneNumberConfirmed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true
          },
          "isGoogleAuthenticatorEnabled": {
            "type": "boolean"
          }
        }
      },
      "UpdateGoogleAuthenticatorKeyOutput": {
        "type": "object",
        "properties": {
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendVerificationSmsInputDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VerifySmsCodeInputDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChangePasswordInput": {
        "type": "object",
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "UpdateProfilePictureInput": {
        "type": "object",
        "required": [
          "fileToken"
        ],
        "properties": {
          "fileToken": {
            "type": "string",
            "maxLength": 400
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetPasswordComplexitySettingOutput": {
        "type": "object",
        "properties": {
          "setting": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          }
        }
      },
      "GetProfilePictureOutput": {
        "type": "object",
        "properties": {
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChangeUserLanguageDto": {
        "type": "object",
        "required": [
          "languageName"
        ],
        "properties": {
          "languageName": {
            "type": "string"
          }
        }
      },
      "ProfitLogDto": {
        "type": "object",
        "properties": {
          "profitValue": {
            "type": "number",
            "format": "double"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetProfitLogForViewOutput": {
        "type": "object",
        "properties": {
          "profitLog": {
            "$ref": "#/components/schemas/ProfitLogDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetProfitLogForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetProfitLogForViewOutput"
            }
          }
        }
      },
      "EditProfitLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetProfitLogForEditOutput": {
        "type": "object",
        "properties": {
          "profitLog": {
            "$ref": "#/components/schemas/EditProfitLogDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateProfitLogDto": {
        "type": "object"
      },
      "ProfitDto": {
        "type": "object",
        "properties": {
          "profitValue": {
            "type": "number",
            "format": "double"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetProfitForViewOutput": {
        "type": "object",
        "properties": {
          "profit": {
            "$ref": "#/components/schemas/ProfitDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetProfitForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetProfitForViewOutput"
            }
          }
        }
      },
      "EditProfitDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetProfitForEditOutput": {
        "type": "object",
        "properties": {
          "profit": {
            "$ref": "#/components/schemas/EditProfitDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateProfitDto": {
        "type": "object"
      },
      "ProfitLookupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetProfitForLookupOutput": {
        "type": "object",
        "properties": {
          "profit": {
            "$ref": "#/components/schemas/ProfitLookupDto"
          }
        }
      },
      "PagedResultDtoOfGetProfitForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetProfitForLookupOutput"
            }
          }
        }
      },
      "QuotationLogDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "autoDeal": {
            "type": "boolean"
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetQuotationLogForViewOutput": {
        "type": "object",
        "properties": {
          "quotationLog": {
            "$ref": "#/components/schemas/QuotationLogDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetQuotationLogForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetQuotationLogForViewOutput"
            }
          }
        }
      },
      "EditQuotationLogDto": {
        "type": "object",
        "required": [
          "autoDeal",
          "sales"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "autoDeal": {
            "type": "boolean"
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetQuotationLogForEditOutput": {
        "type": "object",
        "properties": {
          "quotationLog": {
            "$ref": "#/components/schemas/EditQuotationLogDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateQuotationLogDto": {
        "type": "object",
        "required": [
          "autoDeal",
          "sales"
        ],
        "properties": {
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "autoDeal": {
            "type": "boolean"
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QuotationDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "当日报价",
            "format": "double",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "description": "库存",
            "format": "int32",
            "nullable": true
          },
          "notify": {
            "type": "boolean",
            "description": "订阅消息通知"
          },
          "autoDeal": {
            "type": "boolean",
            "description": "自动报价接单"
          },
          "sales": {
            "type": "integer",
            "description": "当日销量",
            "format": "int32"
          },
          "skuId": {
            "type": "integer",
            "description": "产品SKU_ID",
            "format": "int32"
          },
          "provinceId": {
            "type": "integer",
            "description": "可供应地区ID",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "description": "报价单有效时间",
            "format": "date-time"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetQuotationForViewOutput": {
        "type": "object",
        "properties": {
          "quotation": {
            "$ref": "#/components/schemas/QuotationDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetQuotationForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetQuotationForViewOutput"
            }
          }
        }
      },
      "CreateQuotationDto": {
        "type": "object",
        "required": [
          "expiryDate",
          "notify",
          "provinceId",
          "skuId"
        ],
        "properties": {
          "price": {
            "type": "integer",
            "description": "供应价格",
            "format": "int32"
          },
          "stock": {
            "type": "integer",
            "description": "可供应库存",
            "format": "int32"
          },
          "notify": {
            "type": "boolean",
            "description": "订阅产品相关消息"
          },
          "expiryDate": {
            "type": "string",
            "description": "报价单有效时间",
            "format": "date-time"
          },
          "skuId": {
            "type": "integer",
            "description": "产品SKU_ID",
            "format": "int32"
          },
          "provinceId": {
            "type": "integer",
            "description": "省份ID",
            "format": "int32"
          }
        }
      },
      "GetQuotationForAdminViewOutput": {
        "type": "object",
        "properties": {
          "quotation": {
            "$ref": "#/components/schemas/QuotationDto"
          },
          "providerSurName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetQuotationForAdminViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetQuotationForAdminViewOutput"
            }
          }
        }
      },
      "EditQuotationDto": {
        "type": "object",
        "required": [
          "expiryDate",
          "notify",
          "provinceId",
          "skuId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "description": "供应价格",
            "format": "int32"
          },
          "stock": {
            "type": "integer",
            "description": "可供应库存",
            "format": "int32"
          },
          "notify": {
            "type": "boolean",
            "description": "订阅产品相关消息"
          },
          "expiryDate": {
            "type": "string",
            "description": "报价单有效时间",
            "format": "date-time"
          },
          "skuId": {
            "type": "integer",
            "description": "产品SKU_ID",
            "format": "int32"
          },
          "provinceId": {
            "type": "integer",
            "description": "省份ID",
            "format": "int32"
          }
        }
      },
      "GetQuotationForEditOutput": {
        "type": "object",
        "properties": {
          "quotation": {
            "$ref": "#/components/schemas/EditQuotationDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegionDto": {
        "type": "object",
        "properties": {
          "regionCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pinyinAbbr": {
            "type": "string",
            "nullable": true
          },
          "pinyin": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetRegionForViewOutput": {
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          }
        }
      },
      "PagedResultDtoOfGetRegionForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetRegionForViewOutput"
            }
          }
        }
      },
      "EditRegionDto": {
        "type": "object",
        "required": [
          "name",
          "pinyin",
          "pinyinAbbr",
          "regionCode"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "regionCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pinyinAbbr": {
            "type": "string"
          },
          "pinyin": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GetRegionForEditOutput": {
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/EditRegionDto"
          }
        }
      },
      "CreateRegionDto": {
        "type": "object",
        "required": [
          "name",
          "pinyin",
          "pinyinAbbr",
          "regionCode"
        ],
        "properties": {
          "regionCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pinyinAbbr": {
            "type": "string"
          },
          "pinyin": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RegionLookupDto": {
        "type": "object",
        "properties": {
          "regionCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetRegionForLookupOutput": {
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/RegionLookupDto"
          }
        }
      },
      "PagedResultDtoOfGetRegionForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetRegionForLookupOutput"
            }
          }
        }
      },
      "RoleListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListResultDtoOfRoleListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoleListDto"
            }
          }
        }
      },
      "RoleEditDto": {
        "type": "object",
        "required": [
          "displayName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "FlatPermissionDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isGrantedByDefault": {
            "type": "boolean"
          }
        }
      },
      "GetRoleForEditOutput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEditDto"
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatPermissionDto"
            }
          },
          "grantedPermissionNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrUpdateRoleInput": {
        "type": "object",
        "required": [
          "grantedPermissionNames",
          "role"
        ],
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEditDto"
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserLoginInfoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SubscriptionPaymentType": {
        "type": "string",
        "x-enumNames": [
          "Manual",
          "RecurringAutomatic",
          "RecurringManual"
        ],
        "enum": [
          "Manual",
          "RecurringAutomatic",
          "RecurringManual"
        ]
      },
      "EditionInfoDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isHighestEdition": {
            "type": "boolean"
          },
          "isFree": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TenantLoginInfoDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "logoFileType": {
            "type": "string",
            "nullable": true
          },
          "customCssId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "subscriptionPaymentType": {
            "$ref": "#/components/schemas/SubscriptionPaymentType"
          },
          "edition": {
            "$ref": "#/components/schemas/EditionInfoDto"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "paymentPeriodType": {
            "$ref": "#/components/schemas/PaymentPeriodType"
          },
          "subscriptionDateString": {
            "type": "string",
            "nullable": true
          },
          "creationTimeString": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApplicationInfoDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencySign": {
            "type": "string",
            "nullable": true
          },
          "allowTenantsToChangeEmailSettings": {
            "type": "boolean"
          },
          "features": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "ThemeLayoutSettingsDto": {
        "type": "object",
        "properties": {
          "layoutType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemeHeaderSettingsDto": {
        "type": "object",
        "properties": {
          "desktopFixedHeader": {
            "type": "boolean"
          },
          "mobileFixedHeader": {
            "type": "boolean"
          },
          "headerSkin": {
            "type": "string",
            "nullable": true
          },
          "minimizeDesktopHeaderType": {
            "type": "string",
            "nullable": true
          },
          "headerMenuArrows": {
            "type": "boolean"
          }
        }
      },
      "ThemeSubHeaderSettingsDto": {
        "type": "object",
        "properties": {
          "fixedSubHeader": {
            "type": "boolean"
          },
          "subHeaderStyle": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ThemeMenuSettingsDto": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "nullable": true
          },
          "asideSkin": {
            "type": "string",
            "nullable": true
          },
          "fixedAside": {
            "type": "boolean"
          },
          "allowAsideMinimizing": {
            "type": "boolean"
          },
          "defaultMinimizedAside": {
            "type": "boolean"
          },
          "submenuToggle": {
            "type": "string",
            "nullable": true
          },
          "searchActive": {
            "type": "boolean"
          }
        }
      },
      "ThemeFooterSettingsDto": {
        "type": "object",
        "properties": {
          "fixedFooter": {
            "type": "boolean"
          }
        }
      },
      "ThemeSettingsDto": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "nullable": true
          },
          "layout": {
            "$ref": "#/components/schemas/ThemeLayoutSettingsDto"
          },
          "header": {
            "$ref": "#/components/schemas/ThemeHeaderSettingsDto"
          },
          "subHeader": {
            "$ref": "#/components/schemas/ThemeSubHeaderSettingsDto"
          },
          "menu": {
            "$ref": "#/components/schemas/ThemeMenuSettingsDto"
          },
          "footer": {
            "$ref": "#/components/schemas/ThemeFooterSettingsDto"
          }
        }
      },
      "UiCustomizationSettingsDto": {
        "type": "object",
        "properties": {
          "baseSettings": {
            "$ref": "#/components/schemas/ThemeSettingsDto"
          },
          "isLeftMenuUsed": {
            "type": "boolean"
          },
          "isTopMenuUsed": {
            "type": "boolean"
          },
          "isTabMenuUsed": {
            "type": "boolean"
          },
          "allowMenuScroll": {
            "type": "boolean"
          }
        }
      },
      "GetCurrentLoginInformationsOutput": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserLoginInfoDto"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantLoginInfoDto"
          },
          "application": {
            "$ref": "#/components/schemas/ApplicationInfoDto"
          },
          "theme": {
            "$ref": "#/components/schemas/UiCustomizationSettingsDto"
          }
        }
      },
      "UpdateUserSignInTokenOutput": {
        "type": "object",
        "properties": {
          "signInToken": {
            "type": "string",
            "nullable": true
          },
          "encodedUserId": {
            "type": "string",
            "nullable": true
          },
          "encodedTenantId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetSKUForViewOutput": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/SKUDto"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "skuPropTitles": {
            "type": "array",
            "description": "SKU标题集合",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PagedResultDtoOfGetSKUForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSKUForViewOutput"
            }
          }
        }
      },
      "EditSKUDto": {
        "type": "object",
        "required": [
          "guidePrice",
          "isActive",
          "name",
          "properties"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "guidePrice": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSKUForEditOutput": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/EditSKUDto"
          },
          "productName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSKUDto": {
        "type": "object",
        "required": [
          "guidePrice",
          "isActive",
          "name",
          "properties"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "guidePrice": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SKULookupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "guidePrice": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSKUForLookupOutput": {
        "type": "object",
        "properties": {
          "sku": {
            "$ref": "#/components/schemas/SKULookupDto"
          }
        }
      },
      "PagedResultDtoOfGetSKUForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSKUForLookupOutput"
            }
          }
        }
      },
      "StripeConfigurationDto": {
        "type": "object",
        "properties": {
          "publishableKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StripeCreatePaymentSessionInput": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "cancelUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StripePaymentResultOutput": {
        "type": "object",
        "properties": {
          "paymentDone": {
            "type": "boolean"
          }
        }
      },
      "SubjectStatus": {
        "type": "string",
        "description": "需求单状态枚举",
        "x-enumNames": [
          "Opening",
          "Expired",
          "Finished",
          "Revoked"
        ],
        "enum": [
          "Opening",
          "Expired",
          "Finished",
          "Revoked"
        ]
      },
      "SubjectDto": {
        "type": "object",
        "properties": {
          "expectPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quotedPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "matchedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/SubjectStatus"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "provinceId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetSubjectForViewOutput": {
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/SubjectDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "lowestPrice": {
            "type": "number",
            "description": "最低报价",
            "format": "double",
            "nullable": true
          },
          "providerTotal": {
            "type": "integer",
            "description": "供应商数量",
            "format": "int32"
          }
        }
      },
      "PagedResultDtoOfGetSubjectForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectForViewOutput"
            }
          }
        }
      },
      "EditSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "notes",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "expectPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSubjectForEditOutput": {
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/EditSubjectDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "notes",
          "quantity"
        ],
        "properties": {
          "expectPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SubjectLookupDto": {
        "type": "object",
        "properties": {
          "expectPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "matchedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/SubjectStatus"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetSubjectForLookupOutput": {
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/SubjectLookupDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetSubjectForLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectForLookupOutput"
            }
          }
        }
      },
      "ProviderSubjectDto": {
        "type": "object",
        "properties": {
          "skuId": {
            "type": "integer",
            "description": "商品ID",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "采购数量",
            "format": "int32"
          },
          "matchedQuantity": {
            "type": "integer",
            "description": "已配单数量",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "description": "收货人地址所属地区ID",
            "format": "int32"
          },
          "expectPrice": {
            "type": "number",
            "description": "采购方期望成交价格",
            "format": "double",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "description": "需求单报价截止时间",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "description": "需求单备注信息",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SubjectStatus"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetSubjectForProviderViewOutput": {
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/ProviderSubjectDto"
          },
          "skuName": {
            "type": "string",
            "description": "商品名称",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "description": "收货人所属地区名称",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetSubjectForProviderViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectForProviderViewOutput"
            }
          }
        }
      },
      "EditProviderSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "notes",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "expectPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSubjectForProviderEditOutput": {
        "type": "object",
        "properties": {
          "providerSubject": {
            "$ref": "#/components/schemas/EditProviderSubjectDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateProviderSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "notes",
          "quantity"
        ],
        "properties": {
          "expectPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string"
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSubjectStatOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "汇总数据编号",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "此产品此地区当前总需求量",
            "format": "int32"
          },
          "lowestPrice": {
            "type": "number",
            "description": "此产品此地区当前最低报价",
            "format": "double",
            "nullable": true
          },
          "dealPrice": {
            "type": "number",
            "description": "此产品此地区当前最高需求价（扣除利润）",
            "format": "double",
            "nullable": true
          },
          "quotation": {
            "$ref": "#/components/schemas/QuotationDto"
          },
          "skuId": {
            "type": "integer",
            "description": "产品SKU_ID",
            "format": "int32"
          },
          "skuName": {
            "type": "string",
            "description": "商品名称",
            "nullable": true
          },
          "provinceId": {
            "type": "integer",
            "description": "所属省份ID",
            "format": "int32"
          },
          "provinceName": {
            "type": "string",
            "description": "收货人所属地区名称",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetSubjectStatOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectStatOutput"
            }
          }
        }
      },
      "PurchaserSubjectDto": {
        "type": "object",
        "properties": {
          "expectPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quotedPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "matchedQuantity": {
            "type": "integer",
            "description": "已配单数量",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/SubjectStatus"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "skuId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetSubjectForPurchaserViewOutput": {
        "type": "object",
        "properties": {
          "purchaserSubject": {
            "$ref": "#/components/schemas/PurchaserSubjectDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "marketPrice": {
            "type": "integer",
            "description": "当前市场价",
            "format": "int32"
          }
        }
      },
      "PagedResultDtoOfGetSubjectForPurchaserViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectForPurchaserViewOutput"
            }
          }
        }
      },
      "EditPurchaserSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "expectPrice": {
            "type": "integer",
            "description": "采购方期望成交价格",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "采购数量",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "description": "需求单报价截止时间",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "description": "收货人详细地址",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "收货人",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "收货人联系电话",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "需求单备注信息",
            "nullable": true
          },
          "skuId": {
            "type": "integer",
            "description": "商品ID",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "description": "收货人地址所属地区ID",
            "format": "int32"
          }
        }
      },
      "GetSubjectForPurchaserEditOutput": {
        "type": "object",
        "properties": {
          "purchaserSubject": {
            "$ref": "#/components/schemas/EditPurchaserSubjectDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          },
          "regionName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreatePurchaserSubjectDto": {
        "type": "object",
        "required": [
          "deadline",
          "quantity"
        ],
        "properties": {
          "expectPrice": {
            "type": "integer",
            "description": "采购方期望成交价格",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "采购数量",
            "format": "int32"
          },
          "deadline": {
            "type": "string",
            "description": "需求单报价截止时间",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "description": "收货人详细地址",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "收货人",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "收货人联系电话",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "需求单备注信息",
            "nullable": true
          },
          "skuId": {
            "type": "integer",
            "description": "商品ID",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "description": "收货人地址所属地区ID",
            "format": "int32"
          }
        }
      },
      "PurchaserSubjectLookupDto": {
        "type": "object",
        "properties": {
          "expectPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "matchedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/SubjectStatus"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetSubjectForPurchaserLookupOutput": {
        "type": "object",
        "properties": {
          "purchaserSubject": {
            "$ref": "#/components/schemas/PurchaserSubjectLookupDto"
          },
          "skuName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetSubjectForPurchaserLookupOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetSubjectForPurchaserLookupOutput"
            }
          }
        }
      },
      "TenantListDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PagedResultDtoOfTenantListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TenantListDto"
            }
          }
        }
      },
      "TenancyType": {
        "type": "string",
        "x-enumNames": [
          "Provider",
          "Purchaser"
        ],
        "enum": [
          "Provider",
          "Purchaser"
        ]
      },
      "CreateTenantInput": {
        "type": "object",
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName",
          "type"
        ],
        "properties": {
          "tenancyName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{1,}$"
          },
          "type": {
            "$ref": "#/components/schemas/TenancyType"
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "adminEmailAddress": {
            "type": "string",
            "format": "email",
            "maxLength": 256,
            "minLength": 0
          },
          "adminPassword": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "maxLength": 1024,
            "nullable": true
          },
          "shouldChangePasswordOnNextLogin": {
            "type": "boolean"
          },
          "sendActivationEmail": {
            "type": "boolean"
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          }
        }
      },
      "TenantEditDto": {
        "type": "object",
        "required": [
          "name",
          "tenancyName"
        ],
        "properties": {
          "tenancyName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetTenantFeaturesEditOutput": {
        "type": "object",
        "properties": {
          "featureValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          },
          "features": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatFeatureDto"
            }
          }
        }
      },
      "UpdateTenantFeaturesInput": {
        "type": "object",
        "required": [
          "featureValues"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "EntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MemberActivity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "earnings": {
            "type": "string",
            "nullable": true
          },
          "cases": {
            "type": "integer",
            "format": "int32"
          },
          "closed": {
            "type": "integer",
            "format": "int32"
          },
          "rate": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetMemberActivityOutput": {
        "type": "object",
        "properties": {
          "memberActivities": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberActivity"
            }
          }
        }
      },
      "SalesSummaryDatePeriod": {
        "type": "string",
        "x-enumNames": [
          "Daily",
          "Weekly",
          "Monthly"
        ],
        "enum": [
          "Daily",
          "Weekly",
          "Monthly"
        ]
      },
      "SalesSummaryData": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "nullable": true
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "profit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetDashboardDataOutput": {
        "type": "object",
        "properties": {
          "totalProfit": {
            "type": "integer",
            "format": "int32"
          },
          "newFeedbacks": {
            "type": "integer",
            "format": "int32"
          },
          "newOrders": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "salesSummary": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SalesSummaryData"
            }
          },
          "totalSales": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "integer",
            "format": "int32"
          },
          "expenses": {
            "type": "integer",
            "format": "int32"
          },
          "growth": {
            "type": "integer",
            "format": "int32"
          },
          "transactionPercent": {
            "type": "integer",
            "format": "int32"
          },
          "newVisitPercent": {
            "type": "integer",
            "format": "int32"
          },
          "bouncePercent": {
            "type": "integer",
            "format": "int32"
          },
          "dailySales": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "profitShares": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "GetTopStatsOutput": {
        "type": "object",
        "properties": {
          "totalProfit": {
            "type": "integer",
            "format": "int32"
          },
          "newFeedbacks": {
            "type": "integer",
            "format": "int32"
          },
          "newOrders": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetProfitShareOutput": {
        "type": "object",
        "properties": {
          "profitShares": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "GetDailySalesOutput": {
        "type": "object",
        "properties": {
          "dailySales": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "GetSalesSummaryOutput": {
        "type": "object",
        "properties": {
          "totalSales": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "integer",
            "format": "int32"
          },
          "expenses": {
            "type": "integer",
            "format": "int32"
          },
          "growth": {
            "type": "integer",
            "format": "int32"
          },
          "salesSummary": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SalesSummaryData"
            }
          }
        }
      },
      "RegionalStatCountry": {
        "type": "object",
        "properties": {
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "change": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "averagePrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GetRegionalStatsOutput": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RegionalStatCountry"
            }
          }
        }
      },
      "GetGeneralStatsOutput": {
        "type": "object",
        "properties": {
          "transactionPercent": {
            "type": "integer",
            "format": "int32"
          },
          "newVisitPercent": {
            "type": "integer",
            "format": "int32"
          },
          "bouncePercent": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SubscriptionStartType": {
        "type": "string",
        "x-enumNames": [
          "Free",
          "Trial",
          "Paid"
        ],
        "enum": [
          "Free",
          "Trial",
          "Paid"
        ]
      },
      "RegisterTenantInput": {
        "type": "object",
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName"
        ],
        "properties": {
          "tenancyName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "adminEmailAddress": {
            "type": "string",
            "format": "email",
            "maxLength": 256,
            "minLength": 0
          },
          "adminPassword": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0,
            "nullable": true
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          },
          "subscriptionStartType": {
            "$ref": "#/components/schemas/SubscriptionStartType"
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TenancyType"
          }
        }
      },
      "RegisterTenantOutput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "isTenantActive": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isEmailConfirmationRequired": {
            "type": "boolean"
          }
        }
      },
      "IInputType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "object"
            }
          },
          "validator": {
            "$ref": "#/components/schemas/IValueValidator"
          }
        }
      },
      "FlatFeatureSelectDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "$ref": "#/components/schemas/IInputType"
          },
          "textHtmlColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EditionWithFeaturesDto": {
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionSelectDto"
          },
          "featureValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "EditionsSelectOutput": {
        "type": "object",
        "properties": {
          "allFeatures": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatFeatureSelectDto"
            }
          },
          "editionsWithFeatures": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EditionWithFeaturesDto"
            }
          }
        }
      },
      "TenantUserManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "allowSelfRegistration": {
            "type": "boolean"
          },
          "isNewRegisteredUserActiveByDefault": {
            "type": "boolean"
          },
          "isEmailConfirmationRequiredForLogin": {
            "type": "boolean"
          },
          "useCaptchaOnRegistration": {
            "type": "boolean"
          },
          "useCaptchaOnLogin": {
            "type": "boolean"
          },
          "isCookieConsentEnabled": {
            "type": "boolean"
          },
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          },
          "sessionTimeOutSettings": {
            "$ref": "#/components/schemas/SessionTimeOutSettingsEditDto"
          }
        }
      },
      "TenantEmailSettingsEditDto": {
        "type": "object",
        "properties": {
          "useHostDefaultEmailSettings": {
            "type": "boolean"
          },
          "defaultFromAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "nullable": true
          },
          "smtpHost": {
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "type": "string",
            "nullable": true
          },
          "smtpDomain": {
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          }
        }
      },
      "LdapSettingsEditDto": {
        "type": "object",
        "properties": {
          "isModuleEnabled": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TenantBillingSettingsEditDto": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "taxVatNo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TenantOtherSettingsEditDto": {
        "type": "object",
        "properties": {
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          }
        }
      },
      "TenantSettingsEditDto": {
        "type": "object",
        "required": [
          "security",
          "userManagement"
        ],
        "properties": {
          "general": {
            "$ref": "#/components/schemas/GeneralSettingsEditDto"
          },
          "userManagement": {
            "$ref": "#/components/schemas/TenantUserManagementSettingsEditDto"
          },
          "email": {
            "$ref": "#/components/schemas/TenantEmailSettingsEditDto"
          },
          "ldap": {
            "$ref": "#/components/schemas/LdapSettingsEditDto"
          },
          "security": {
            "$ref": "#/components/schemas/SecuritySettingsEditDto"
          },
          "billing": {
            "$ref": "#/components/schemas/TenantBillingSettingsEditDto"
          },
          "otherSettings": {
            "$ref": "#/components/schemas/TenantOtherSettingsEditDto"
          }
        }
      },
      "SettingScopes": {
        "type": "string",
        "x-enumNames": [
          "Application",
          "Tenant",
          "User",
          "All"
        ],
        "enum": [
          "Application",
          "Tenant",
          "User",
          "All"
        ]
      },
      "ListResultDtoOfNameValueDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        }
      },
      "AuthenticateModel": {
        "type": "object",
        "required": [
          "password",
          "userNameOrEmailAddress"
        ],
        "properties": {
          "userNameOrEmailAddress": {
            "type": "string",
            "maxLength": 256
          },
          "password": {
            "type": "string",
            "maxLength": 32
          },
          "twoFactorVerificationCode": {
            "type": "string",
            "nullable": true
          },
          "rememberClient": {
            "type": "boolean"
          },
          "twoFactorRememberClientToken": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "boolean",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "shouldResetPassword": {
            "type": "boolean"
          },
          "passwordResetCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "requiresTwoFactorVerification": {
            "type": "boolean"
          },
          "twoFactorAuthProviders": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "twoFactorRememberClientToken": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RefreshTokenResult": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SendTwoFactorAuthCodeModel": {
        "type": "object",
        "required": [
          "provider"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1.0
          },
          "provider": {
            "type": "string"
          }
        }
      },
      "ImpersonatedAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SwitchedAccountAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExternalLoginProviderInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "additionalParams": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ExternalAuthenticateModel": {
        "type": "object",
        "required": [
          "authProvider",
          "providerAccessCode",
          "providerKey"
        ],
        "properties": {
          "authProvider": {
            "type": "string",
            "maxLength": 128
          },
          "providerKey": {
            "type": "string",
            "maxLength": 256
          },
          "providerAccessCode": {
            "type": "string"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ExternalAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "waitingForActivation": {
            "type": "boolean"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TransactionDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetTransactionForViewOutput": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/TransactionDto"
          },
          "orderId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PagedResultDtoOfGetTransactionForViewOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GetTransactionForViewOutput"
            }
          }
        }
      },
      "EditTransactionDto": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "GetTransactionForEditOutput": {
        "type": "object",
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/EditTransactionDto"
          },
          "orderId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTransactionDto": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "UserListRoleDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isEmailConfirmed": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserListRoleDto"
            }
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfUserListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserListDto"
            }
          }
        }
      },
      "UserEditDto": {
        "type": "object",
        "required": [
          "emailAddress",
          "name",
          "surname",
          "userName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Set null to create a new user. Set user's Id to update a user",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "surname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "userName": {
            "type": "string",
            "maxLength": 256,
            "minLength": 0
          },
          "emailAddress": {
            "type": "string",
            "format": "email",
            "maxLength": 256,
            "minLength": 0
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 24,
            "minLength": 0,
            "nullable": true
          },
          "password": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0,
            "nullable": true
          },
          "shouldChangePasswordOnNextLogin": {
            "type": "boolean"
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isLockoutEnabled": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "roleDisplayName": {
            "type": "string",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "inheritedFromOrganizationUnit": {
            "type": "boolean"
          }
        }
      },
      "GetUserForEditOutput": {
        "type": "object",
        "properties": {
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserEditDto"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            }
          },
          "allOrganizationUnits": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitDto"
            }
          },
          "memberedOrganizationUnits": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetUserPermissionsForEditOutput": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FlatPermissionDto"
            }
          },
          "grantedPermissionNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateUserPermissionsInput": {
        "type": "object",
        "required": [
          "grantedPermissionNames"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "maximum": 2147483647.0,
            "minimum": 1.0
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrUpdateUserInput": {
        "type": "object",
        "required": [
          "assignedRoleNames",
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEditDto"
          },
          "assignedRoleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendActivationEmail": {
            "type": "boolean"
          },
          "setRandomPassword": {
            "type": "boolean"
          },
          "organizationUnits": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "LinkToUserInput": {
        "type": "object",
        "required": [
          "password",
          "usernameOrEmailAddress"
        ],
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "usernameOrEmailAddress": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LinkedUserDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResultDtoOfLinkedUserDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedUserDto"
            }
          }
        }
      },
      "ListResultDtoOfLinkedUserDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedUserDto"
            }
          }
        }
      },
      "UnlinkUserInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserLoginAttemptDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "userNameOrEmail": {
            "type": "string",
            "nullable": true
          },
          "clientIpAddress": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "browserInfo": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ListResultDtoOfUserLoginAttemptDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserLoginAttemptDto"
            }
          }
        }
      },
      "GetLatestWebLogsOutput": {
        "type": "object",
        "properties": {
          "latestWebLogLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}